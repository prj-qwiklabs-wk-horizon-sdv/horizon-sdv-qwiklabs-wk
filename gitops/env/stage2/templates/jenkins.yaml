apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: jenkins
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "6"
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: horizon-sdv
  source:
    chart: jenkins
    repoURL: https://charts.jenkins.io
    targetRevision: 5.8.2
    helm:
      values: |
        persistence:
          accessMode: "ReadWriteOnce"
          enabled: true
          existingClaim: "jenkins-home-volume"
        rbac:
          readSecrets: true
        controller:
          jenkinsUriPrefix: /jenkins
          admin:
            createSecret: true
            existingSecret: jenkins-initial-creds
            userkey: jenkins-admin-user
            passwordkey: jenkins-admin-password
          jenkinsUrl: https://{{ .Values.config.domain }}/jenkins
          installPlugins:
            - kubernetes:4306.vc91e951ea_eb_d
            - kubernetes-credentials-provider:1.273.v15e69b_55ea_8e
            - configuration-as-code:1932.v75cb_b_f1b_698d
            - configuration-as-code-groovy:1.1
            - workflow-aggregator:600.vb_57cdd26fdd7
            - keycloak:2.3.2
            - job-dsl:1.90
            - git:5.7.0
            - github-branch-source:1810.v913311241fa_9
            - gerrit-trigger:2.42.0
            - gerrit-code-review:0.4.9
            - google-compute-engine:4.589.v8a_eeb_b_d3c45c
            - ssh-slaves:3.1021.va_cc11b_de26a_e
            - google-kubernetes-engine:0.430.v4cc1fa_1847a_9
            - pipeline-stage-view:2.37
            - build-blocker-plugin:166.vc82fc20b_a_ed6
            - startup-trigger-plugin:2.9.4
            - timestamper:1.28
          additionalExistingSecrets:
            - name: jenkins-keycloak
              keyName: keycloakJson
            - name: jenkins-gerrit-ssh-private-key
              keyName: privateKey
            - name: jenkins-gce-creds
              keyName: gce-creds-json
            - name: jenkins-gerrit-http-password
              keyName: password
          javaOpts: "-Dcom.cloudbees.workflow.rest.external.JobExt.maxRunsPerJob=50"
          enableRawHtmlMarkupFormatter: true
          markupFormatter: rawHtml
          JCasC:
            enabled: true
            securityRealm: |-
              keycloak:
                keycloakJson: ${jenkins-keycloak-keycloakJson}
                keycloakRespectAccessTokenTimeout: false
                keycloakValidate: false
            authorizationStrategy: |-
              loggedInUsersCanDoAnything:
                allowAnonymousRead: false
            defaultConfig: true
            configScripts:
              welcome-message: |
                credentials:
                  system:
                    domainCredentials:
                      - credentials:
                        - googleRobotPrivateKey:
                            description: "GCE Creds"
                            id: "gce-creds"
                            scope: GLOBAL
                            projectId: {{ .Values.config.projectID }}
                            serviceAccountConfig:
                              json:
                                filename: {{ .Values.config.projectID }}.json"
                                secretJsonKey: ${base64:${jenkins-gce-creds-gce-creds-json}}
                jenkins:
                  systemMessage: Welcome to Horizon SDV server.
                  clouds:
                    - computeEngine:
                        cloudName: cuttlefish-vm-main
                        configurations:
                          - bootDiskAutoDelete: true
                            bootDiskSizeGb: 10
                            bootDiskSizeGbStr: "10"
                            bootDiskType: "https://www.googleapis.com/compute/v1/projects/{{ .Values.config.projectID }}/zones/{{ .Values.config.zone }}/diskTypes/hyperdisk-balanced"
                            description: "cuttlefish-vm-main"
                            javaExecPath: "/usr/bin/java"
                            labelSet:
                              - name: "cuttlefish-vm-main"
                            labelString: "cuttlefish-vm-main"
                            labels: "cuttlefish-vm-main"
                            launchTimeoutSeconds: 300
                            launchTimeoutSecondsStr: "300"
                            mode: NORMAL
                            namePrefix: "cuttlefish-vm-main"
                            numExecutors: 1
                            numExecutorsStr: "1"
                            oneShot: true
                            region: "https://www.googleapis.com/compute/v1/projects/{{ .Values.config.projectID }}/regions/{{ .Values.config.region }}"
                            remoteFs: "/home/jenkins"
                            retentionTimeMinutes: 6
                            retentionTimeMinutesStr: "6"
                            runAsUser: "jenkins"
                            sshConfiguration:
                              customPrivateKeyCredentialsId: "jenkins-cuttlefish-vm-ssh-private-key"
                            template: "https://www.googleapis.com/compute/v1/projects/{{ .Values.config.projectID }}/global/instanceTemplates/instance-template-cuttlefish-vm-main-debian"
                            useInternalAddress: true
                            zone: "https://www.googleapis.com/compute/v1/projects/{{ .Values.config.projectID }}/zones/{{ .Values.config.zone }}"
                        credentialsId: "gce-creds"
                        instanceCapStr: "20"
                        noDelayProvisioning: true
                        projectId: {{ .Values.config.projectID }}
                    - computeEngine:
                        cloudName: "cuttlefish-vm-v110"
                        configurations:
                        - bootDiskAutoDelete: true
                          bootDiskSizeGb: 10
                          bootDiskSizeGbStr: "10"
                          bootDiskType: "https://www.googleapis.com/compute/v1/projects/{{ .Values.config.projectID }}/zones/{{ .Values.config.zone }}/diskTypes/hyperdisk-balanced"
                          description: "cuttlefish-vm-v110"
                          javaExecPath: "/usr/bin/java"
                          labelSet:
                          - name: "cuttlefish-vm-v110"
                          labelString: "cuttlefish-vm-v110"
                          labels: "cuttlefish-vm-v110"
                          launchTimeoutSeconds: 300
                          launchTimeoutSecondsStr: "300"
                          mode: NORMAL
                          namePrefix: "cuttlefish-vm-v110"
                          numExecutors: 1
                          numExecutorsStr: "1"
                          oneShot: true
                          region: "https://www.googleapis.com/compute/v1/projects/{{ .Values.config.projectID }}/regions/{{ .Values.config.region }}"
                          remoteFs: "/home/jenkins"
                          retentionTimeMinutes: 6
                          retentionTimeMinutesStr: "6"
                          runAsUser: "jenkins"
                          sshConfiguration:
                            customPrivateKeyCredentialsId: "jenkins-cuttlefish-vm-ssh-private-key"
                          template: "https://www.googleapis.com/compute/v1/projects/{{ .Values.config.projectID }}/global/instanceTemplates/instance-template-cuttlefish-vm-v101-debian"
                          useInternalAddress: true
                          zone: "https://www.googleapis.com/compute/v1/projects/{{ .Values.config.projectID }}/zones/{{ .Values.config.zone }}"
                        credentialsId: "gce-creds"
                        instanceCapStr: "20"
                        noDelayProvisioning: true
                        projectId: {{ .Values.config.projectID }}
                  globalNodeProperties:
                    - envVars:
                        env:
                        - key: "ANDROID_BUILD_BUCKET_ROOT_NAME"
                          value: {{ .Values.config.projectID }}-aaos
                        - key: "ANDROID_BUILD_DOCKER_ARTIFACT_PATH_NAME"
                          value: "horizon-sdv/aaos_builder"
                        - key: "CLOUD_REGION"
                          value: {{ .Values.config.region }}
                        - key: "CLOUD_ZONE"
                          value: {{ .Values.config.zone }}
                        - key: "CLOUD_PROJECT"
                          value: {{ .Values.config.projectID }}
                        - key: "HORIZON_DOMAIN"
                          value: {{ .Values.config.domain }}
                        - key: "JENKINS_SERVICE_ACCOUNT"
                          value: "jenkins-sa"
                        - key: "JENKINS_CACHE_STORAGE_CLASS_NAME"
                          value: "reclaimable-storage-class"
                        - key: "REPO_SYNC_JOBS"
                          value: "2"
                groovy:
                  - script: >
                      println("This is groovy !");
                jobs:
                  - script: >
                      folder('Android') {
                        displayName('Android Workflows')
                        description('<p>This folder contains pipelines and jobs related to environment administration, building, testing, and deploying Android applications.<br/>It includes workflows for administration, building and test tasks.</p>')
                      }
                  - script: >
                      folder('Android/Environment') {
                        displayName('Environment')
                        description('<p>This folder contains environment administrative jobs related to supporting Android workflows.</p>')
                      }
                  - script: >
                      folder('Android/Builds') {
                        displayName('Builds')
                        description('<p>This folder contains jobs to build Android targets.</p>')
                      }
                  - script: >
                      folder('Android/Tests') {
                        displayName('Tests')
                        description('<p>This folder contains jobs used to help test and validate Android builds.</p>')
                      }
                  - script: >
                      pipelineJob('Android/Environment/Docker Image Template') {
                        description('<p>Build the container image used on Kubernetes for building Android targets and Cuttlefish instances.</p>')
                        triggers {
                          hudsonStartupTrigger {
                            nodeParameterName("")
                            label("")
                            quietPeriod("0")
                            runOnChoice("ON_CONNECT")
                          }
                        }
                        definition {
                          cpsScm {
                            lightweight()
                            scm {
                              git {
                                remote {
                                  url('{{ .Values.config.workloads.android.url }}')
                                  credentials('jenkins-github-creds')
                                }
                                branch('*/{{ .Values.config.workloads.android.branch }}')
                              }
                            }
                            scriptPath('workloads/android/pipelines/environment/docker_image_template/Jenkinsfile')
                          }
                        }
                      }
                  - script: >
                      pipelineJob('Android/Environment/CF Instance Template') {
                        description('<p>Pipeline for creating and managing GCE instance templates optimized for Cuttlefish workflows, such as CVD Launcher and CTS Execution.<br/>Includes an option to delete outdated instances and artifacts.</p>')
                        triggers {
                          hudsonStartupTrigger {
                            nodeParameterName("")
                            label("")
                            quietPeriod("0")
                            runOnChoice("ON_CONNECT")
                          }
                        }
                        definition {
                          cpsScm {
                            lightweight()
                            scm {
                              git {
                                remote {
                                  url('{{ .Values.config.workloads.android.url }}')
                                  credentials('jenkins-github-creds')
                                }
                                branch('*/{{ .Values.config.workloads.android.branch }}')
                              }
                            }
                            scriptPath('workloads/android/pipelines/environment/cf_instance_template/Jenkinsfile')
                          }
                        }
                      }
                  - script: >
                      pipelineJob('Android/Environment/Development Instance') {
                        description('''
                          <p>This job allows creation of temporary build instances that can be used to aid development.<br/>
                          Instances can be expensive and therefore there is a maximum up-time before the instance will automatically be terminated.</p>
                          <p>Access the instance via <tt>bastion</tt> host and <tt>kubectl</tt> command line tool, e.g.</p>
                          <p><tt>kubectl exec -it -n jenkins &lt;pod name&gt; -- bash</tt></p>
                          <p><b>Note:</b> users are responsible for saving their own work to persistent storage before expiry.</p>''')
                        triggers {
                          hudsonStartupTrigger {
                            nodeParameterName("")
                            label("")
                            quietPeriod("0")
                            runOnChoice("ON_CONNECT")
                          }
                        }
                        definition {
                          cpsScm {
                            lightweight()
                            scm {
                              git {
                                remote {
                                  url('https://github.com/AGBG-ASG/acn-horizon-sdv.git')
                                  credentials('jenkins-github-creds')
                                }
                                branch('*/{{ .Values.config.workloads.android.branch }}')
                              }
                            }
                            scriptPath('workloads/android/pipelines/environment/dev_instance/Jenkinsfile')
                          }
                        }
                      }
                  - script: >
                      pipelineJob('Android/Environment/Delete Cuttlefish VM Instance') {
                        description('''
                          <p>This job allows tooling developers delete Cuttlefish VM instances.<br/>
                          Not for everyday use, simply to aid developers clean up if expensive instances are left running.</p>''')
                        triggers {
                          hudsonStartupTrigger {
                            nodeParameterName("")
                            label("")
                            quietPeriod("0")
                            runOnChoice("ON_CONNECT")
                          }
                        }
                        definition {
                          cpsScm {
                            lightweight()
                            scm {
                              git {
                                remote {
                                  url('https://github.com/AGBG-ASG/acn-horizon-sdv.git')
                                  credentials('jenkins-github-creds')
                                }
                                branch('*/{{ .Values.config.workloads.android.branch }}')
                              }
                            }
                            scriptPath('workloads/android/pipelines/environment/delete_cf_vm_instance/Jenkinsfile')
                          }
                        }
                      }
                  - script: >
                      pipelineJob('Android/Environment/Delete MTK Connect Testbench') {
                        description('''
                          <p>This job allows tooling developers delete MTK Connect offline testbenches..<br/>
                          Not for everyday use, simply to aid developers clean up during developing tests.</p>''')
                        triggers {
                          hudsonStartupTrigger {
                            nodeParameterName("")
                            label("")
                            quietPeriod("0")
                            runOnChoice("ON_CONNECT")
                          }
                        }
                        definition {
                          cpsScm {
                            lightweight()
                            scm {
                              git {
                                remote {
                                  url('https://github.com/AGBG-ASG/acn-horizon-sdv.git')
                                  credentials('jenkins-github-creds')
                                }
                                branch('*/{{ .Values.config.workloads.android.branch }}')
                              }
                            }
                            scriptPath('workloads/android/pipelines/environment/delete_mtkc_testbench/Jenkinsfile')
                          }
                        }
                      }
                  - script: >
                      pipelineJob('Android/Builds/AAOS Builder') {
                        description('<p>Android Automotive build pipeline.<br/>This pipeline builds Android Automotive OS targets.</p>')
                        triggers {
                          hudsonStartupTrigger {
                            nodeParameterName("")
                            label("")
                            quietPeriod("0")
                            runOnChoice("ON_CONNECT")
                          }
                        }
                        definition {
                          cpsScm {
                            lightweight()
                            scm {
                              git {
                                remote {
                                  url('{{ .Values.config.workloads.android.url }} ')
                                  credentials('jenkins-github-creds')
                                }
                                branch('*/{{ .Values.config.workloads.android.branch }}')
                              }
                            }
                            scriptPath('workloads/android/pipelines/builds/aaos_builder/Jenkinsfile')
                          }
                        }
                      }
                  - script: >
                      pipelineJob('Android/Builds/CTS Builder') {
                        description('<p>Builds Android Compliance Test Suite test harness, rather than use standard Google release.<br/>CTS_Execution can then use this instead of default Android CTS test harness.</p>')
                        triggers {
                          hudsonStartupTrigger {
                            nodeParameterName("")
                            label("")
                            quietPeriod("0")
                            runOnChoice("ON_CONNECT")
                          }
                        }
                        definition {
                          cpsScm {
                            lightweight()
                            scm {
                              git {
                                remote {
                                  url('{{ .Values.config.workloads.android.url }}')
                                  credentials('jenkins-github-creds')
                                }
                                branch('*/{{ .Values.config.workloads.android.branch }}')
                              }
                            }
                            scriptPath('workloads/android/pipelines/builds/cts_builder/Jenkinsfile')
                          }
                        }
                      }
                  - script: >
                      pipelineJob('Android/Builds/Gerrit') {
                        description('<p>Gerrit triggered build and test.Triggered by Gerrit commits.</p>')
                        triggers {
                          hudsonStartupTrigger {
                            nodeParameterName("")
                            label("")
                            quietPeriod("0")
                            runOnChoice("ON_CONNECT")
                          }
                        }
                        definition {
                          cpsScm {
                            lightweight()
                            scm {
                              git {
                                remote {
                                  url('{{ .Values.config.workloads.android.url }}')
                                  credentials('jenkins-github-creds')
                                }
                                branch('*/{{ .Values.config.workloads.android.branch }}')
                              }
                            }
                            scriptPath('workloads/android/pipelines/builds/gerrit/Jenkinsfile')
                          }
                        }
                      }
                  - script: >
                      pipelineJob('Android/Tests/CTS Execution') {
                        description('<p>Run the CTS test harness against Cuttlefish Virtual Device images.</p>')
                        triggers {
                          hudsonStartupTrigger {
                            nodeParameterName("")
                            label("")
                            quietPeriod("0")
                            runOnChoice("ON_CONNECT")
                          }
                        }
                        definition {
                          cpsScm {
                            lightweight()
                            scm {
                              git {
                                remote {
                                  url('{{ .Values.config.workloads.android.url }}')
                                  credentials('jenkins-github-creds')
                                }
                                branch('*/{{ .Values.config.workloads.android.branch }}')
                              }
                            }
                            scriptPath('workloads/android/pipelines/tests/cts_execution/Jenkinsfile')
                          }
                        }
                      }
                  - script: >
                      pipelineJob('Android/Tests/CVD Launcher') {
                        description('<p>Launches Cuttlefish Virtual Devices (CVD) on the Cuttlefish Virtual Machine instances created by GCE from Cuttlefish instance templates</p>')
                        triggers {
                          hudsonStartupTrigger {
                            nodeParameterName("")
                            label("")
                            quietPeriod("0")
                            runOnChoice("ON_CONNECT")
                          }
                        }
                        definition {
                          cpsScm {
                            lightweight()
                            scm {
                              git {
                                remote {
                                  url('{{ .Values.config.workloads.android.url }}')
                                  credentials('jenkins-github-creds')
                                }
                                branch('*/{{ .Values.config.workloads.android.branch }}')
                              }
                            }
                            scriptPath('workloads/android/pipelines/tests/cvd_launcher/Jenkinsfile')
                          }
                        }
                      }
                unclassified:
                  gerrit-trigger:
                    servers:
                      - name: "Gerrit"
                        noConnectionOnStartup: false
                        config:
                          buildCurrentPatchesOnly:
                            abortAbandonedPatchsets: false
                            abortManualPatchsets: false
                            abortNewPatchsets: false
                            abortSameTopic: false
                            enabled: false
                          categories:
                            - verdictDescription: "Code Review"
                              verdictValue: "Code-Review"
                            - verdictDescription: "Verified"
                              verdictValue: "Verified"
                          gerritAuthKeyFile: "/run/secrets/additional/jenkins-gerrit-ssh-private-key-privateKey"
                          gerritFrontEndUrl: "https://{{ .Values.config.domain }}/"
                          gerritHostName: "gerrit-service.gerrit.svc.cluster.local"
                          gerritUserName: "gerrit-admin"
                          useRestApi: false
                  timestamper:
                    allPipelines: true
  destination:
    server: https://kubernetes.default.svc
    namespace: jenkins
  syncPolicy:
    syncOptions:
      - CreateNamespace=true
    automated: {}
