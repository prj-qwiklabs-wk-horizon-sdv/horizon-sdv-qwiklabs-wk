name: Terraform Delete DEV

on:
  workflow_call:
    inputs:
      environment:
        required: false
        description: "environment to use"
        type: string
        default: dev
      terraform-version:
        required: false
        default: latest
        type: string

jobs:
  get-env:
    name: Get environment
    runs-on: self-hosted
    outputs:
      environment: ${{ steps.get-env.outputs.environment }}
      env_only: ${{ steps.get-env.outputs.env_only }}
    steps:
    - name: get environment
      id: get-env
      shell: bash
      run: |
        if [[ "${{ inputs.environment }}" != '' ]]; then
          echo "environment=${{ inputs.environment }}" >> $GITHUB_OUTPUT;
          temp=${{ inputs.environment }}
          env_only=${temp%-plan*}
          env_only=${env_only%-apply*}
          echo "env_only=$env_only" >> $GITHUB_OUTPUT;
        elif [[ "${{ github.ref }}" == 'refs/heads/main' ]]; then
          echo "environment=main" >> $GITHUB_OUTPUT;
          echo "env_only=main" >> $GITHUB_OUTPUT;
        fi

  terraform:
    name: Terraform
    runs-on: self-hosted
    needs: get-env
    environment: ${{ needs.get-env.outputs.environment }}

    steps:
    - name: Setup node
      uses: actions/setup-node@v4
      with:
        node-version: 20

    - name: Checkout source code
      uses: actions/checkout@v4.1.1

    - id: auth
      uses: google-github-actions/auth@v2
      with:
        credentials_json: '${{ secrets.gcp-sa-key }}'
        service_account: "${{ secrets.GCP_SA }}"
        workload_identity_provider: "${{ secrets.WIF_PROVIDER }}"

    - name: Setup terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ inputs.terraform-version }}

    - name: Destroy environment
      working-directory: terraform/evn/dev/
      id: tfdestroy
      if: github.ref == 'refs/heads/main'
      run: |
        terraform destroy
      continue-on-error: true

