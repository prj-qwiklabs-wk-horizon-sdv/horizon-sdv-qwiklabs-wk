name: used - Terraform dnamic envs

on:
  workflow_call:
    secrets:
      wif-provider:
        required: false
        description: "Workload Identity Federation provider"
      gcp-sa:
        required: false
        description: "GCP Service account to impersonate"
      gh-app-key:
        required: false
        description: "Github App Private Key"
      gh-argocd-initial-password:
        required: false
        description: "Github Secret ARGOCD_INITIAL_PASSWORD"
      gh-jenkins-initial-password:
        required: false
        description: "Github Secret JENKINS_INITIAL_PASSWORD"
      gh-keycloak-initial-password:
        required: false
        description: "Github Secret KEYCLOAK_INITIAL_PASSWORD"
      gh-mtkc-regcred:
        required: false
        description: "Github Secret MTKC-REGRED"

    inputs:
      environment:
        required: false
        description: "environment to use"
        type: string
      path:
        required: false
        description: "Terraform directory"
        default: "terraform"
        type: string
      wif-provider:
        required: false
        description: "Workload Identity Federation provider"
        type: string
      gcp-sa:
        required: false
        description: "GCP Service account to impersonate"
        type: string
      terraform-version:
        required: false
        default: latest
        type: string
      terraform-apply:
        required: false
        default: false
        type: boolean

jobs:
  checkov:
    uses: ./.github/workflows/checkov.yaml
    secrets:
      gh-app-key: "${{ secrets.gh-app-key }}"
    with:
      environment: "${{ inputs.environment }}"
      directory: terraform

  tflint:
    uses: ./.github/workflows/terraform_lint.yaml
    with:
      terraform-path: ${{ inputs.path }}

  trivy:
    permissions:
      contents: read
      pull-requests: write
    uses: ./.github/workflows/trivy_secret_scan.yaml

  terraformfmt:
    uses: ./.github/workflows/terraform_fmt.yaml
    with:
      terraform-path: ${{ inputs.path }}
      terraform-version: ${{ inputs.terraform-version }}

  get-phase:
    name: Determine if it's plan or apply
    runs-on: self-hosted
    outputs:
      phase: ${{ steps.get-env.outputs.phase }}
    steps:
    - name: get phase
      id: get-env
      shell: bash
      run: |
        if [[ "${{ github.ref }}" == 'refs/heads/main' ]]; then
          echo "phase=apply" >> $GITHUB_OUTPUT;
        else
          echo "phase=plan" >> $GITHUB_OUTPUT;
        fi

  terraform:
    needs: [checkov,trivy,terraformfmt,tflint,get-phase]
    uses: ./.github/workflows/terraform.yaml
    concurrency:
      group: terraform-${{ inputs.environment }}
    permissions:
     contents: 'read'
     id-token: 'write'
     pull-requests: 'write'
    secrets:
      gcp-sa: "${{ secrets.gcp-sa }}"
      wif-provider: "${{ secrets.wif-provider }}"
      sdv-secret: "${{ secrets.sdv-secret }}"
      gh-app-key: "${{ secrets.gh-app-key }}"
      gh-argocd-initial-password: "${{ secrets.gh-argocd-initial-password }}"
      gh-jenkins-initial-password: "${{ secrets.gh-jenkins-initial-password }}"
      gh-keycloak-initial-password: "${{ secrets.gh-keycloak-initial-password }}"
      gh-mtkc-regcred: "${{ secrets.gh-mtkc-regcred }}"
    with:
      terraform-version: ${{ inputs.terraform-version }}
      directory: ${{ inputs.path }}
      environment: ${{ inputs.environment }}
