name: used - trivy

on:
  workflow_call:
    inputs:
      skip-files:
        required: false
        default: ""
        type: string
      skip-dirs:
        required: false
        default: ""
        type: string
      severity:
        required: false
        default: "UNKNOWN,LOW,MEDIUM,HIGH,CRITICAL"
        type: string

jobs:
  trivy:
    name: trivy secret scan
    runs-on: ubuntu-latest
    steps:
    - name: Checkout source code
      uses: actions/checkout@v4.2.1

    - name: Scan commit for secrets
      id: trivy
      uses: aquasecurity/trivy-action@master
      with:
        output: 'trivy-scan.txt'
        scan-type: 'fs'
        scan-ref: '.'
        scanners: 'secret'
        exit-code: '1'
        skip-files: ${{ inputs.skip-files }}
        skip-dirs: ${{ inputs.skip-dirs }}
        severity: ${{ inputs.severity }}
      continue-on-error: true

    - name: Get trivy scan results
      if: steps.trivy.outcome == 'failure'
      id: get-scan
      run: |
        echo "TRIVY_SCAN<<EOF" >> $GITHUB_ENV
        echo  "$(cat trivy-scan.txt)" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV

    - name: Post Scan Results as comment
      if: steps.trivy.outcome == 'failure'
      uses: mshick/add-pr-comment@v2
      with:
        allow-repeats: false
        message-id: secret-scan
        message: |
          ## Trivy detected secrets in repo!
          ```
          ${{ env.TRIVY_SCAN }}


          Remove the secret from the repository as soon as possible.
          If a Service Account Key was pushed, please rotate it.
          If the secret was a Password, please change it.
          If it was a private key or an access token, revoke all access and create a new one.

          If you consider it to be a false positive, add as input to this shared-workflow 'skip-files'
          Specifying a comma separated value list of files to be ignored by the scan.
          ```
      continue-on-error: true

    - name: Fail if Trivy found secrets failed
      if: steps.trivy.outcome == 'failure'
      uses: actions/github-script@v6
      with:
        script: |
          core.setFailed('Secret detected in the remote repository.')


